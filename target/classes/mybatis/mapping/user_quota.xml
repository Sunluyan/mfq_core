<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfq.dao.UserQuotaMapper">
	<sql id="selectsql">
		uid, realname, school, contact, grade, classes, startschool_at as
		startschoolAt, 
		school_location_id as schoolLocationId, origin,
		school_location as schoolLocation, student_id as studentId,speciality ,faculty,school_remark as schoolRemark,school_level as schoolLevel,
		
		homesite, id_card as idCard, idcard_reverse as idCardReverse,idcard_front as idCardFront,
		balance, present, quota_all as quotaAll,quota_left as quotaLeft,
		
		company , work_remark as workRemark , work_years as workYears ,social_insurance_id as socialInsuranceId,
		salary , user_type as userType, position, department, scholastic_years as scholasticYears,
		
		auth_status as authStatus, wish_plastic as
		wishPlastic, school_remark as schoolRemark, created_at as createdAt, updated_at as updatedAt
		
		
	</sql>

	<sql id="insertsql">
		uid, realname, school, contact, grade, classes, startschool_at, school_location_id,
		school_location, homesite, id_card, idcard_front,idcard_reverse, balance, present,
		auth_status, quota_all, quota_left, wish_plastic, school_remark, created_at, updated_at
	</sql>

	<select id="queryUserQuota" resultType="UserQuota">
		select
		<include refid="selectsql" />
		from users_quota where uid=#{uid}
	</select>

	<insert id="insertUserQuota" parameterType="UserQuota">
		insert into users_quota(
		<include refid="insertsql" />
		)values (
		#{uid}, #{realname}, #{school}, #{contact}, #{grade}, #{classes}, #{startschoolAt},#{schoolLocationId}, 
		#{schoolLocation}, #{homesite},#{idCard}, #{idCardFront}, #{idCardReverse}, #{balance},#{present},
		#{authStatus}, #{quotaAll}, #{quotaLeft}, #{wishPlastic},#{schoolRemark}, now(), now()
		)
	</insert>

	<update id="updateUserBalance" parameterType="UserQuota">
		update users_quota
		set balance=#{balance} where uid=#{uid} 
	</update>

	<update id="updateUserPresent" parameterType="UserQuota">
		update users_quota
		set present=present+#{num} where uid=#{uid} and present=#{present}
	</update>

	<update id="updateUserWish">
		update users_quota set wish_plastic=#{wish} where
		uid=#{uid}
	</update>

	<update id="updateUserQuota" parameterType="UserQuota">
		update users_quota
		set uid=#{uid}, realname=#{realname}, school=#{school},
		contact=#{contact},
		startschool_at=#{startschoolAt}, id_card=#{idCard}, balance=#{balance}, present=#{present},
		quota_all=#{quotaAll}, quota_left=#{quotaLeft}, auth_status=#{authStatus},
		created_at=#{createdAt},
		updated_at=#{updatedAt} where uid=#{uid}
	</update>

	
	<update id="updateUserQuotaForAdult">
		update users_quota
		set realname=#{realname}, origin=#{origin},
		<if test="usertype != 0">
			user_type=#{usertype},
		</if>
		id_card = #{idCard}, auth_status=#{status}, school_location=#{schoolLocation},
		updated_at=now() where uid=#{uid}
	</update>
	
	<update id="updateIdPic">
		update users_quota set 
		<if test="type == 1">
		idcard_front = #{pic}
		</if>
		<if test="type == 2">
		idcard_reverse = #{pic}
		</if>
		where uid=#{uid}
	</update>

	<update id="updateAdultWorkInfo">
		update users_quota set 
		<if test="company != null and company != ''">
			company = #{company} ,
		</if>
		<if test="position != null and position != ''">
		position= #{position},
		</if>
		<if test="department != null and department != ''">
		department=#{department},
		</if>
		<if test = "salary != null and salary != ''">
		salary=#{salary},
		</if>
		<if test="socialInsurance != null and socialInsurance != ''">
		social_insurance_id=#{socialInsurance},
		</if>
		<if test="workYears != null and workYears != ''">
		work_years=#{workYears},
		</if>
		 auth_status = 3,
		 updated_at = now() where uid=#{uid}
	</update>
	
	<update id="updateStudentWorkInfo">
				update users_quota set 
		<if test="studentId != null and studentId != ''">
			student_id = #{studentId} ,
		</if>
		<if test="school != null and school != ''">
		school= #{school},
		</if>
		<if test="schoolLocation != null and schoolLocation != ''">
		school_location=#{schoolLocation},
		</if>
		<if test = "grade != null and grade != ''">
		grade=#{grade},
		</if>
		<if test="schoolLevel != null and schoolLevel != ''">
		school_level=#{schoolLevel},
		</if>
		<if test="faculty != null and faculty != ''">
		faculty=#{faculty},
		</if>
		<if test="speciality != null and speciality != ''">
		speciality=#{speciality},
		</if>
		<if test="scholasticYears != null and scholasticYears != ''">
		scholastic_years=#{scholasticYears},
		</if>
		auth_status = 3,
		updated_at = now() where uid=#{uid}
	</update>
	
	<update id="updateAuthStatusByUid">
		update users_quota
		set auth_status = #{authStatus}
		where uid = #{uid}
	</update>

	<update id="updateUserType">
		update users_quota set user_type = #{type} where uid= #{uid}
	</update>
</mapper>