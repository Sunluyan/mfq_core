<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfq.dao.OrderInfoMapper">
	<sql id="selectsqld">
		o.id, o.order_no as orderNo, o.price as price, o.uid as uid, o.pid as pid, o.pay_type as
		payType, o.period_pay as periodPay, o.period as period, o.online_pay as onlinePay,
		o.hospital_pay as hospitalPay, o.use_balance as useBalance, o.coupon_num as couponNum,
		o.security_code as securityCode, o.refund_type as refundType, o.status as status, o.policy_status as policyStatus,
		o.created_at as createdAt, o.updated_at as updatedAt
	</sql>
	
	<sql id="selectsql">
		id, order_no as orderNo, price as price, uid as uid, pid as pid, pay_type as
		payType, period_pay as periodPay, period as period, online_pay as onlinePay,
		hospital_pay as hospitalPay, use_balance as useBalance, coupon_num as couponNum,
		security_code as securityCode, refund_type as refundType, status as status, policy_status as policyStatus,
		created_at as createdAt, updated_at as updatedAt , service_start_time as serviceStartTime
	</sql>
	
	<sql id="insertsql">
		order_no, price, uid, pid, pay_type, period_pay, period,
		online_pay,
		hospital_pay, use_balance, coupon_num, security_code, status, policy_status,
		refund_type, created_at,updated_at , service_start_time
	</sql>
	
	<select id="findByTypeAndStatus" resultType="OrderInfo">
		select 
		<include refid="selectsqld" />
		from order_info o, product p where p.id=o.pid and o.status=#{status} and p.type=#{type}
	</select>

	<select id="findByOrderNo" resultType="OrderInfo">
		select
		<include refid="selectsql" />
		from order_info where order_no=#{orderNo}
	</select>

	<select id="findByUid" resultType="OrderInfo">
		select
		<include refid="selectsql" />
		from order_info where uid=#{uid}
	</select>

	<select id="findByUidAndStatus" resultType="OrderInfo">
		select
		<include refid="selectsql" />
		from order_info where uid=#{uid}
		<if test="status != null and status != 0">
			and status >= #{status}
		</if>

	</select>

	<select id="findOrdersByUidAndStatus" resultType="OrderInfo">
		select
		<include refid="selectsql" />
		from order_info where uid=#{uid}
		and status=#{status}
	</select>
	
	
	<select id="findByUidAndPayTypeAndPid" resultType="long">
		select count(*) from order_info where uid=#{uid} and pid = #{pid} and pay_type = #{type} and status = 0
	</select>

	<select id="findByUidAndProductType" resultType="OrderInfo">
		
		select
		
		o.id, o.order_no as orderNo, o.price, o.uid, o.pid, o.pay_type as payType, 
		
		o.period_pay as periodPay, o.period, o.online_pay as onlinePay,o.hospital_pay as hospitalPay, 
		
		o.use_balance as useBalance, o.coupon_num as couponNum,o.security_code as securityCode,
		
		o.refund_type as refundType, o.status,o.created_at as createdAt, o.updated_at as updatedAt
		
		from order_info o, product p where uid=#{uid} and p.type=#{type} and o.pid = p.id
		
	</select>
	
	<update id="updateOrderInfo">
		update order_info set status=#{status},
		refund_type=#{refundType} , updated_at = now() where order_no=#{orderNo}
	</update>
	<insert id="insertOrder" parameterType="OrderInfo"
		useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into order_info(
		<include refid="insertsql" />
		)values (
		#{orderNo}, #{price}, #{uid}, #{pid}, #{payType},
		#{periodPay}, #{period}, #{onlinePay}, #{hospitalPay}, #{useBalance}, #{couponNum},
		#{securityCode}, #{status}, #{policyStatus}, #{refundType}, now(), now(),#{serviceStartTime}

		)
	</insert>

	<update id="updateOrderStatusSafe">
		update order_info 
		set status=#{newStatus}, updated_at = now() 
		
		where
		
		id=#{id} and status=#{oldStatus}
	</update>
	
	<update id="updateOnlinepayByOrderNo"  >
	    update order_info
		set online_pay = #{onlinePay}
	    where order_no = #{orderNo}
  </update>
  
  <update id="updatePolicyStatusByStatus">
  	update order_info set policy_status=#{newStatus} where order_no = #{orderNo} and policy_status=#{oldStatus}
  </update>

</mapper>